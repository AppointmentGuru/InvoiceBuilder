image: python:3.6

stages:
  - test
  - build
  - deploy

cache:
  paths:
  - ~/.cache/pip/
# test:
#   stage: test
#   services:
#   - postgres:latest
#   before_script:
#   - python -V
#   - pip install -r requirements.txt
#   script:
#   - coverage run --branch --source=. ./manage.py test
#   - coverage html
#   - coverage report
#   coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
#   artifacts:
#     paths:
#       - htmlcov/
#     expire_in: 1 hour
build:
  image: docker
  services:
    - docker:dind
  stage: build
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

deploy_review:
  stage: deploy
  image: docker
  stage: deploy
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - echo $DEPLOY_KEY >> id_rsa
    - docker run --rm -v `pwd`/id_rsa:/code/id_rsa registry.gitlab.com/appointmentguru/ops/playbooks:master ansible ansible-playbook deploy_service.yml -i inventory/digital_ocean.py
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_COMMIT_REF_NAME-$CI_PROJECT_NAME.appointmentguru.co
  only:
    - branches
  except:
    - master

deploy_production:
  stage: deploy
  script:
    - echo "Deploy a review app"
  environment:
    name: production
    url: https://$CI_PROJECT_NAME.appointmentguru.co
  only:
    - master