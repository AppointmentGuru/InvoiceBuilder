image: python:3.6

services:
  - postgres:latest

stages:
  - test
  - build
  - analyze

cache:
  paths:
  - ~/.cache/pip/

test:
  stage: test
  before_script:
  - python -V
  - pip install -r requirements.txt
  script:
  - coverage run --branch --source=. ./manage.py test
  - coverage html
  - coverage report
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    paths:
      - htmlcov/
    expire_in: 1 hour
build:
  image: docker
  services:
    - docker:dind
  stage: build
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

pages:
  stage: analyze
  script:
    - cp -r htmlcov/ public/
  artifacts:
    paths:
      - public
  only:
    - master